_Exit(i)vX
__atomic_add_fetch(?)v
__atomic_add_fetch_1(vV*,U,i)U
__atomic_add_fetch_16(vV*,T,i)T
__atomic_add_fetch_2(vV*,S,i)S
__atomic_add_fetch_4(vV*,I,i)I
__atomic_add_fetch_8(vV*,L,i)L
__atomic_always_lock_free(L,vCV*)b
__atomic_and_fetch(?)v
__atomic_and_fetch_1(vV*,U,i)U
__atomic_and_fetch_16(vV*,T,i)T
__atomic_and_fetch_2(vV*,S,i)S
__atomic_and_fetch_4(vV*,I,i)I
__atomic_and_fetch_8(vV*,L,i)L
__atomic_clear(vV*,i)v
__atomic_compare_exchange(L,vV*,v*,v*,b,i,i)b
__atomic_compare_exchange_1(vV*,v*,U,b,i,i)b
__atomic_compare_exchange_16(vV*,v*,T,b,i,i)b
__atomic_compare_exchange_2(vV*,v*,S,b,i,i)b
__atomic_compare_exchange_4(vV*,v*,I,b,i,i)b
__atomic_compare_exchange_8(vV*,v*,L,b,i,i)b
__atomic_compare_exchange_n(?)v
__atomic_exchange(L,vV*,v*,v*,i)v
__atomic_exchange_1(vV*,U,i)U
__atomic_exchange_16(vV*,T,i)T
__atomic_exchange_2(vV*,S,i)S
__atomic_exchange_4(vV*,I,i)I
__atomic_exchange_8(vV*,L,i)L
__atomic_exchange_n(?)v
__atomic_feraiseexcept(i)v
__atomic_fetch_add(?)v
__atomic_fetch_add_1(vV*,U,i)U
__atomic_fetch_add_16(vV*,T,i)T
__atomic_fetch_add_2(vV*,S,i)S
__atomic_fetch_add_4(vV*,I,i)I
__atomic_fetch_add_8(vV*,L,i)L
__atomic_fetch_and(?)v
__atomic_fetch_and_1(vV*,U,i)U
__atomic_fetch_and_16(vV*,T,i)T
__atomic_fetch_and_2(vV*,S,i)S
__atomic_fetch_and_4(vV*,I,i)I
__atomic_fetch_and_8(vV*,L,i)L
__atomic_fetch_nand(?)v
__atomic_fetch_nand_1(vV*,U,i)U
__atomic_fetch_nand_16(vV*,T,i)T
__atomic_fetch_nand_2(vV*,S,i)S
__atomic_fetch_nand_4(vV*,I,i)I
__atomic_fetch_nand_8(vV*,L,i)L
__atomic_fetch_or(?)v
__atomic_fetch_or_1(vV*,U,i)U
__atomic_fetch_or_16(vV*,T,i)T
__atomic_fetch_or_2(vV*,S,i)S
__atomic_fetch_or_4(vV*,I,i)I
__atomic_fetch_or_8(vV*,L,i)L
__atomic_fetch_sub(?)v
__atomic_fetch_sub_1(vV*,U,i)U
__atomic_fetch_sub_16(vV*,T,i)T
__atomic_fetch_sub_2(vV*,S,i)S
__atomic_fetch_sub_4(vV*,I,i)I
__atomic_fetch_sub_8(vV*,L,i)L
__atomic_fetch_xor(?)v
__atomic_fetch_xor_1(vV*,U,i)U
__atomic_fetch_xor_16(vV*,T,i)T
__atomic_fetch_xor_2(vV*,S,i)S
__atomic_fetch_xor_4(vV*,I,i)I
__atomic_fetch_xor_8(vV*,L,i)L
__atomic_is_lock_free(L,vCV*)b
__atomic_load(L,vCV*,v*,i)v
__atomic_load_1(vCV*,i)U
__atomic_load_16(vCV*,i)T
__atomic_load_2(vCV*,i)S
__atomic_load_4(vCV*,i)I
__atomic_load_8(vCV*,i)L
__atomic_load_n(?)v
__atomic_nand_fetch(?)v
__atomic_nand_fetch_1(vV*,U,i)U
__atomic_nand_fetch_16(vV*,T,i)T
__atomic_nand_fetch_2(vV*,S,i)S
__atomic_nand_fetch_4(vV*,I,i)I
__atomic_nand_fetch_8(vV*,L,i)L
__atomic_or_fetch(?)v
__atomic_or_fetch_1(vV*,U,i)U
__atomic_or_fetch_16(vV*,T,i)T
__atomic_or_fetch_2(vV*,S,i)S
__atomic_or_fetch_4(vV*,I,i)I
__atomic_or_fetch_8(vV*,L,i)L
__atomic_signal_fence(i)v
__atomic_store(L,vCV*,v*,i)v
__atomic_store_1(vV*,U,i)v
__atomic_store_16(vV*,T,i)v
__atomic_store_2(vV*,S,i)v
__atomic_store_4(vV*,I,i)v
__atomic_store_8(vV*,L,i)v
__atomic_store_n(?)v
__atomic_sub_fetch(?)v
__atomic_sub_fetch_1(vV*,U,i)U
__atomic_sub_fetch_16(vV*,T,i)T
__atomic_sub_fetch_2(vV*,S,i)S
__atomic_sub_fetch_4(vV*,I,i)I
__atomic_sub_fetch_8(vV*,L,i)L
__atomic_test_and_set(vV*,i)b
__atomic_thread_fence(i)v
__atomic_xor_fetch(?)v
__atomic_xor_fetch_1(vV*,U,i)U
__atomic_xor_fetch_16(vV*,T,i)T
__atomic_xor_fetch_2(vV*,S,i)S
__atomic_xor_fetch_4(vV*,I,i)I
__atomic_xor_fetch_8(vV*,L,i)L
__bnd_chk_ptr_bounds(vC*,L)v
__bnd_chk_ptr_lbounds(vC*)v
__bnd_chk_ptr_ubounds(vC*)v
__bnd_copy_ptr_bounds(vC*,vC*)v*
__bnd_get_ptr_lbound(vC*)vC*
__bnd_get_ptr_ubound(vC*)vC*
__bnd_init_ptr_bounds(vC*)v*
__bnd_narrow_ptr_bounds(vC*,vC*,L)v*
__bnd_null_ptr_bounds(vC*)v*
__bnd_set_ptr_bounds(vC*,L)v*
__bnd_store_ptr_bounds(v**,vC*)v
__bswapdi2(o)o
__bswapsi2(i)i
__builtin_FILE(?)uC*
__builtin_FUNCTION(?)uC*
__builtin_GOMP_atomic_end(?)v
__builtin_GOMP_atomic_start(?)v
__builtin_GOMP_barrier(?)v
__builtin_GOMP_barrier_cancel(?)b
__builtin_GOMP_cancel(i,b)b
__builtin_GOMP_cancellation_point(i)b
__builtin_GOMP_critical_end(?)v
__builtin_GOMP_critical_name_end(v**)v
__builtin_GOMP_critical_name_start(v**)v
__builtin_GOMP_critical_start(?)v
__builtin_GOMP_loop_dynamic_next(l*,l*)b
__builtin_GOMP_loop_dynamic_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_end(?)v
__builtin_GOMP_loop_end_cancel(?)b
__builtin_GOMP_loop_end_nowait(?)v
__builtin_GOMP_loop_guided_next(l*,l*)b
__builtin_GOMP_loop_guided_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_ordered_dynamic_next(l*,l*)b
__builtin_GOMP_loop_ordered_dynamic_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_ordered_guided_next(l*,l*)b
__builtin_GOMP_loop_ordered_guided_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_ordered_runtime_next(l*,l*)b
__builtin_GOMP_loop_ordered_runtime_start(l,l,l,l*,l*)b
__builtin_GOMP_loop_ordered_static_next(l*,l*)b
__builtin_GOMP_loop_ordered_static_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_runtime_next(l*,l*)b
__builtin_GOMP_loop_runtime_start(l,l,l,l*,l*)b
__builtin_GOMP_loop_static_next(l*,l*)b
__builtin_GOMP_loop_static_start(l,l,l,l,l*,l*)b
__builtin_GOMP_loop_ull_dynamic_next(O*,O*)b
__builtin_GOMP_loop_ull_dynamic_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_guided_next(O*,O*)b
__builtin_GOMP_loop_ull_guided_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_ordered_dynamic_next(O*,O*)b
__builtin_GOMP_loop_ull_ordered_dynamic_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_ordered_guided_next(O*,O*)b
__builtin_GOMP_loop_ull_ordered_guided_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_ordered_runtime_next(O*,O*)b
__builtin_GOMP_loop_ull_ordered_runtime_start(b,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_ordered_static_next(O*,O*)b
__builtin_GOMP_loop_ull_ordered_static_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_runtime_next(O*,O*)b
__builtin_GOMP_loop_ull_runtime_start(b,O,O,O,O*,O*)b
__builtin_GOMP_loop_ull_static_next(O*,O*)b
__builtin_GOMP_loop_ull_static_start(b,O,O,O,O,O*,O*)b
__builtin_GOMP_ordered_end(?)v
__builtin_GOMP_ordered_start(?)v
__builtin_GOMP_parallel((v*)v,v*,I,I)v
__builtin_GOMP_parallel_loop_dynamic((v*)v,v*,I,l,l,l,l,I)v
__builtin_GOMP_parallel_loop_guided((v*)v,v*,I,l,l,l,l,I)v
__builtin_GOMP_parallel_loop_runtime((v*)v,v*,I,l,l,l,I)v
__builtin_GOMP_parallel_loop_static((v*)v,v*,I,l,l,l,l,I)v
__builtin_GOMP_parallel_sections((v*)v,v*,I,I,I)v
__builtin_GOMP_sections_end(?)v
__builtin_GOMP_sections_end_cancel(?)b
__builtin_GOMP_sections_end_nowait(?)v
__builtin_GOMP_sections_next(?)I
__builtin_GOMP_sections_start(I)I
__builtin_GOMP_single_copy_end(v*)v
__builtin_GOMP_single_copy_start(?)v*
__builtin_GOMP_single_start(?)b
__builtin_GOMP_target(i,(v*)v,v*,L,v*,v*,v*)v
__builtin_GOMP_target_data(i,v*,L,v*,v*,v*)v
__builtin_GOMP_target_end_data(?)v
__builtin_GOMP_target_update(i,v*,L,v*,v*,v*)v
__builtin_GOMP_task((v*)v,v*,(v*,v*)v,l,l,b,I,v*)v
__builtin_GOMP_taskgroup_end(?)v
__builtin_GOMP_taskgroup_start(?)v
__builtin_GOMP_taskwait(?)v
__builtin_GOMP_taskyield(?)v
__builtin_GOMP_teams(I,I)v
__builtin_LINE(?)i
__builtin__Exit(i)vX
__builtin___bnd_chk_ptr_bounds(vC*,L)v
__builtin___bnd_chk_ptr_lbounds(vC*)v
__builtin___bnd_chk_ptr_ubounds(vC*)v
__builtin___bnd_copy_ptr_bounds(vC*,vC*)v*
__builtin___bnd_get_ptr_lbound(vC*)vC*
__builtin___bnd_get_ptr_ubound(vC*)vC*
__builtin___bnd_init_ptr_bounds(vC*)v*
__builtin___bnd_narrow_ptr_bounds(vC*,vC*,L)v*
__builtin___bnd_null_ptr_bounds(vC*)v*
__builtin___bnd_set_ptr_bounds(vC*,L)v*
__builtin___bnd_store_ptr_bounds(v**,vC*)v
__builtin___clear_cache(v*,v*)v
__builtin___fprintf_chk(v*,i,uC*,?)i
__builtin___memcpy_chk(v*,vC*,L,L)v*
__builtin___memmove_chk(v*,vC*,L,L)v*
__builtin___mempcpy_chk(v*,vC*,L,L)v*
__builtin___memset_chk(v*,i,L,L)v*
__builtin___printf_chk(i,uC*,?)i
__builtin___snprintf_chk(u*,L,i,L,uC*,?)i
__builtin___sprintf_chk(u*,i,L,uC*,?)i
__builtin___stpcpy_chk(u*,uC*,L)u*
__builtin___stpncpy_chk(u*,uC*,L,L)u*
__builtin___strcat_chk(u*,uC*,L)u*
__builtin___strcpy_chk(u*,uC*,L)u*
__builtin___strncat_chk(u*,uC*,L,L)u*
__builtin___strncpy_chk(u*,uC*,L,L)u*
__builtin___vfprintf_chk(v*,i,uC*,a*)i
__builtin___vprintf_chk(i,uC*,a*)i
__builtin___vsnprintf_chk(u*,L,i,L,uC*,a*)i
__builtin___vsprintf_chk(u*,i,L,uC*,a*)i
__builtin__exit(i)vX
__builtin_abort(?)vX
__builtin_abs(i)i
__builtin_acc_on_device(i)i
__builtin_acos(d)d
__builtin_acosf(f)f
__builtin_acosh(d)d
__builtin_acoshf(f)f
__builtin_acoshl(e)e
__builtin_acosl(e)e
__builtin_add_overflow(?)b
__builtin_adjust_trampoline(v*)v*
__builtin_aggregate_incoming_address(?)v*
__builtin_aligned_alloc(L,L)v*
__builtin_alloca(L)v*
__builtin_alloca_with_align(L,L)v*
__builtin_apply((?)v,v*,L)v*
__builtin_apply_args(?)v*
__builtin_asin(d)d
__builtin_asinf(f)f
__builtin_asinh(d)d
__builtin_asinhf(f)f
__builtin_asinhl(e)e
__builtin_asinl(e)e
__builtin_assume_aligned(vC*,L)v*
__builtin_atan(d)d
__builtin_atan2(d,d)d
__builtin_atan2f(f,f)f
__builtin_atan2l(e,e)e
__builtin_atanf(f)f
__builtin_atanh(d)d
__builtin_atanhf(f)f
__builtin_atanhl(e)e
__builtin_atanl(e)e
__builtin_bcmp(vC*,vC*,L)i
__builtin_bcopy(vC*,v*,L)v
__builtin_bswap16(S)S
__builtin_bswap32(I)I
__builtin_bswap64(L)L
__builtin_bzero(v*,L)v
__builtin_cabs(D)d
__builtin_cabsf(F)f
__builtin_cabsl(E)e
__builtin_cacos(D)D
__builtin_cacosf(F)F
__builtin_cacosh(D)D
__builtin_cacoshf(F)F
__builtin_cacoshl(E)E
__builtin_cacosl(E)E
__builtin_calloc(L,L)v*
__builtin_carg(D)d
__builtin_cargf(F)f
__builtin_cargl(E)e
__builtin_casin(D)D
__builtin_casinf(F)F
__builtin_casinh(D)D
__builtin_casinhf(F)F
__builtin_casinhl(E)E
__builtin_casinl(E)E
__builtin_catan(D)D
__builtin_catanf(F)F
__builtin_catanh(D)D
__builtin_catanhf(F)F
__builtin_catanhl(E)E
__builtin_catanl(E)E
__builtin_cbrt(d)d
__builtin_cbrtf(f)f
__builtin_cbrtl(e)e
__builtin_ccos(D)D
__builtin_ccosf(F)F
__builtin_ccosh(D)D
__builtin_ccoshf(F)F
__builtin_ccoshl(E)E
__builtin_ccosl(E)E
__builtin_ceil(d)d
__builtin_ceilf(f)f
__builtin_ceill(e)e
__builtin_cexp(D)D
__builtin_cexpf(F)F
__builtin_cexpi(d)D
__builtin_cexpif(f)F
__builtin_cexpil(e)E
__builtin_cexpl(E)E
__builtin_chkp_memcpy_nobnd(v*,vC*,L)v*
__builtin_chkp_memcpy_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_memcpy_nochk(v*,vC*,L)v*
__builtin_chkp_memmove_nobnd(v*,vC*,L)v*
__builtin_chkp_memmove_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_memmove_nochk(v*,vC*,L)v*
__builtin_chkp_mempcpy_nobnd(v*,vC*,L)v*
__builtin_chkp_mempcpy_nobnd_nochk(v*,vC*,L)v*
__builtin_chkp_mempcpy_nochk(v*,vC*,L)v*
__builtin_chkp_memset_nobnd(v*,i,L)v*
__builtin_chkp_memset_nobnd_nochk(v*,i,L)v*
__builtin_chkp_memset_nochk(v*,i,L)v*
__builtin_choose_expr()i
__builtin_cimag(D)d
__builtin_cimagf(F)f
__builtin_cimagl(E)e
__builtin_classify_type(?)i
__builtin_clog(D)D
__builtin_clog10(D)D
__builtin_clog10f(F)F
__builtin_clog10l(E)E
__builtin_clogf(F)F
__builtin_clogl(E)E
__builtin_clrsb(i)i
__builtin_clrsbimax(l)i
__builtin_clrsbl(l)i
__builtin_clrsbll(o)i
__builtin_clz(I)i
__builtin_clzimax(L)i
__builtin_clzl(L)i
__builtin_clzll(O)i
__builtin_conj(D)D
__builtin_conjf(F)F
__builtin_conjl(E)E
__builtin_constant_p(?)i
__builtin_copysign(d,d)d
__builtin_copysignf(f,f)f
__builtin_copysignl(e,e)e
__builtin_copysignq(q,q)q
__builtin_cos(d)d
__builtin_cosf(f)f
__builtin_cosh(d)d
__builtin_coshf(f)f
__builtin_coshl(e)e
__builtin_cosl(e)e
__builtin_cpow(D,D)D
__builtin_cpowf(F,F)F
__builtin_cpowl(E,E)E
__builtin_cproj(D)D
__builtin_cprojf(F)F
__builtin_cprojl(E)E
__builtin_cpu_init(?)i
__builtin_cpu_is(uC*)i
__builtin_cpu_supports(uC*)i
__builtin_creal(D)d
__builtin_crealf(F)f
__builtin_creall(E)e
__builtin_csin(D)D
__builtin_csinf(F)F
__builtin_csinh(D)D
__builtin_csinhf(F)F
__builtin_csinhl(E)E
__builtin_csinl(E)E
__builtin_csqrt(D)D
__builtin_csqrtf(F)F
__builtin_csqrtl(E)E
__builtin_ctan(D)D
__builtin_ctanf(F)F
__builtin_ctanh(D)D
__builtin_ctanhf(F)F
__builtin_ctanhl(E)E
__builtin_ctanl(E)E
__builtin_ctz(I)i
__builtin_ctzimax(L)i
__builtin_ctzl(L)i
__builtin_ctzll(O)i
__builtin_dcgettext(uC*,uC*,i)u*
__builtin_dgettext(uC*,uC*)u*
__builtin_drem(d,d)d
__builtin_dremf(f,f)f
__builtin_dreml(e,e)e
__builtin_dwarf_cfa(?)v*
__builtin_dwarf_sp_column(?)I
__builtin_eh_copy_values(i,i)v
__builtin_eh_filter(i)l
__builtin_eh_pointer(i)v*
__builtin_eh_return(l,v*)v
__builtin_eh_return_data_regno(i)i
__builtin_erf(d)d
__builtin_erfc(d)d
__builtin_erfcf(f)f
__builtin_erfcl(e)e
__builtin_erff(f)f
__builtin_erfl(e)e
__builtin_execl(uC*,uC*,?)i
__builtin_execle(uC*,uC*,?)i
__builtin_execlp(uC*,uC*,?)i
__builtin_execv(uC*,uC**)i
__builtin_execve(uC*,uC**,uC**)i
__builtin_execvp(uC*,uC**)i
__builtin_exit(i)vX
__builtin_exp(d)d
__builtin_exp10(d)d
__builtin_exp10f(f)f
__builtin_exp10l(e)e
__builtin_exp2(d)d
__builtin_exp2f(f)f
__builtin_exp2l(e)e
__builtin_expect(l,l)l
__builtin_expf(f)f
__builtin_expl(e)e
__builtin_expm1(d)d
__builtin_expm1f(f)f
__builtin_expm1l(e)e
__builtin_extend_pointer(v*)L
__builtin_extract_return_addr(v*)v*
__builtin_fabs(d)d
__builtin_fabsd128(f:D128)f:D128
__builtin_fabsd32(f:D32)f:D32
__builtin_fabsd64(f:D64)f:D64
__builtin_fabsf(f)f
__builtin_fabsl(e)e
__builtin_fabsq(q)q
__builtin_fdim(d,d)d
__builtin_fdimf(f,f)f
__builtin_fdiml(e,e)e
__builtin_ffs(i)i
__builtin_ffsimax(l)i
__builtin_ffsl(l)i
__builtin_ffsll(o)i
__builtin_finite(d)i
__builtin_finited128(f:D128)i
__builtin_finited32(f:D32)i
__builtin_finited64(f:D64)i
__builtin_finitef(f)i
__builtin_finitel(e)i
__builtin_floor(d)d
__builtin_floorf(f)f
__builtin_floorl(e)e
__builtin_fma(d,d,d)d
__builtin_fmaf(f,f,f)f
__builtin_fmal(e,e,e)e
__builtin_fmax(d,d)d
__builtin_fmaxf(f,f)f
__builtin_fmaxl(e,e)e
__builtin_fmin(d,d)d
__builtin_fminf(f,f)f
__builtin_fminl(e,e)e
__builtin_fmod(d,d)d
__builtin_fmodf(f,f)f
__builtin_fmodl(e,e)e
__builtin_fork(?)i
__builtin_fpclassify(i,i,i,i,i)i
__builtin_fprintf(v*,uC*,?)i
__builtin_fprintf_unlocked(v*,uC*,?)i
__builtin_fputc(i,v*)i
__builtin_fputc_unlocked(i,v*)i
__builtin_fputs(uC*,v*)i
__builtin_fputs_unlocked(uC*,v*)i
__builtin_frame_address(I)v*
__builtin_free(v*)v
__builtin_frexp(d,i*)d
__builtin_frexpf(f,i*)f
__builtin_frexpl(e,i*)e
__builtin_frob_return_addr(v*)v*
__builtin_fscanf(v*,uC*,?)i
__builtin_fwrite(vC*,L,L,v*)L
__builtin_fwrite_unlocked(vC*,L,L,v*)L
__builtin_gamma(d)d
__builtin_gamma_r(d,i*)d
__builtin_gammaf(f)f
__builtin_gammaf_r(f,i*)f
__builtin_gammal(e)e
__builtin_gammal_r(e,i*)e
__builtin_gettext(uC*)u*
__builtin_huge_val(?)d
__builtin_huge_valf(?)f
__builtin_huge_vall(?)e
__builtin_huge_valq(?)q
__builtin_hypot(d,d)d
__builtin_hypotf(f,f)f
__builtin_hypotl(e,e)e
__builtin_ia32_addcarryx_u32(U,I,I,I*)U
__builtin_ia32_addcarryx_u64(U,O,O,O*)U
__builtin_ia32_addpd(d2,d2)d2
__builtin_ia32_addps(f4,f4)f4
__builtin_ia32_addsd(d2,d2)d2
__builtin_ia32_addss(f4,f4)f4
__builtin_ia32_andnpd(d2,d2)d2
__builtin_ia32_andnps(f4,f4)f4
__builtin_ia32_andpd(d2,d2)d2
__builtin_ia32_andps(f4,f4)f4
__builtin_ia32_bsrdi(o)o
__builtin_ia32_bsrsi(i)i
__builtin_ia32_clflush(vC*)v
__builtin_ia32_cmpeqpd(d2,d2)d2
__builtin_ia32_cmpeqps(f4,f4)f4
__builtin_ia32_cmpeqsd(d2,d2)d2
__builtin_ia32_cmpeqss(f4,f4)f4
__builtin_ia32_cmpgepd(d2,d2)d2
__builtin_ia32_cmpgeps(f4,f4)f4
__builtin_ia32_cmpgtpd(d2,d2)d2
__builtin_ia32_cmpgtps(f4,f4)f4
__builtin_ia32_cmplepd(d2,d2)d2
__builtin_ia32_cmpleps(f4,f4)f4
__builtin_ia32_cmplesd(d2,d2)d2
__builtin_ia32_cmpless(f4,f4)f4
__builtin_ia32_cmpltpd(d2,d2)d2
__builtin_ia32_cmpltps(f4,f4)f4
__builtin_ia32_cmpltsd(d2,d2)d2
__builtin_ia32_cmpltss(f4,f4)f4
__builtin_ia32_cmpneqpd(d2,d2)d2
__builtin_ia32_cmpneqps(f4,f4)f4
__builtin_ia32_cmpneqsd(d2,d2)d2
__builtin_ia32_cmpneqss(f4,f4)f4
__builtin_ia32_cmpngepd(d2,d2)d2
__builtin_ia32_cmpngeps(f4,f4)f4
__builtin_ia32_cmpngtpd(d2,d2)d2
__builtin_ia32_cmpngtps(f4,f4)f4
__builtin_ia32_cmpnlepd(d2,d2)d2
__builtin_ia32_cmpnleps(f4,f4)f4
__builtin_ia32_cmpnlesd(d2,d2)d2
__builtin_ia32_cmpnless(f4,f4)f4
__builtin_ia32_cmpnltpd(d2,d2)d2
__builtin_ia32_cmpnltps(f4,f4)f4
__builtin_ia32_cmpnltsd(d2,d2)d2
__builtin_ia32_cmpnltss(f4,f4)f4
__builtin_ia32_cmpordpd(d2,d2)d2
__builtin_ia32_cmpordps(f4,f4)f4
__builtin_ia32_cmpordsd(d2,d2)d2
__builtin_ia32_cmpordss(f4,f4)f4
__builtin_ia32_cmpunordpd(d2,d2)d2
__builtin_ia32_cmpunordps(f4,f4)f4
__builtin_ia32_cmpunordsd(d2,d2)d2
__builtin_ia32_cmpunordss(f4,f4)f4
__builtin_ia32_comieq(f4,f4)i
__builtin_ia32_comige(f4,f4)i
__builtin_ia32_comigt(f4,f4)i
__builtin_ia32_comile(f4,f4)i
__builtin_ia32_comilt(f4,f4)i
__builtin_ia32_comineq(f4,f4)i
__builtin_ia32_comisdeq(d2,d2)i
__builtin_ia32_comisdge(d2,d2)i
__builtin_ia32_comisdgt(d2,d2)i
__builtin_ia32_comisdle(d2,d2)i
__builtin_ia32_comisdlt(d2,d2)i
__builtin_ia32_comisdneq(d2,d2)i
__builtin_ia32_copysignpd(d2,d2)d2
__builtin_ia32_copysignps(f4,f4)f4
__builtin_ia32_cvtdq2pd(i4)d2
__builtin_ia32_cvtdq2ps(i4)f4
__builtin_ia32_cvtpd2dq(d2)i4
__builtin_ia32_cvtpd2pi(d2)i2
__builtin_ia32_cvtpd2ps(d2)f4
__builtin_ia32_cvtpi2pd(i2)d2
__builtin_ia32_cvtpi2ps(f4,i2)f4
__builtin_ia32_cvtps2dq(f4)i4
__builtin_ia32_cvtps2pd(f4)d2
__builtin_ia32_cvtps2pi(f4)i2
__builtin_ia32_cvtsd2si(d2)i
__builtin_ia32_cvtsd2si64(d2)o
__builtin_ia32_cvtsd2ss(f4,d2)f4
__builtin_ia32_cvtsi2sd(d2,i)d2
__builtin_ia32_cvtsi2ss(f4,i)f4
__builtin_ia32_cvtsi642sd(d2,o)d2
__builtin_ia32_cvtsi642ss(f4,o)f4
__builtin_ia32_cvtss2sd(d2,f4)d2
__builtin_ia32_cvtss2si(f4)i
__builtin_ia32_cvtss2si64(f4)o
__builtin_ia32_cvttpd2dq(d2)i4
__builtin_ia32_cvttpd2pi(d2)i2
__builtin_ia32_cvttps2dq(f4)i4
__builtin_ia32_cvttps2pi(f4)i2
__builtin_ia32_cvttsd2si(d2)i
__builtin_ia32_cvttsd2si64(d2)o
__builtin_ia32_cvttss2si(f4)i
__builtin_ia32_cvttss2si64(f4)o
__builtin_ia32_divpd(d2,d2)d2
__builtin_ia32_divps(f4,f4)f4
__builtin_ia32_divsd(d2,d2)d2
__builtin_ia32_divss(f4,f4)f4
__builtin_ia32_emms(?)v
__builtin_ia32_fldenv(vC*)v
__builtin_ia32_fnclex(?)v
__builtin_ia32_fnstenv(v*)v
__builtin_ia32_fnstsw(?)S
__builtin_ia32_fxrstor(v*)v
__builtin_ia32_fxrstor64(v*)v
__builtin_ia32_fxsave(v*)v
__builtin_ia32_fxsave64(v*)v
__builtin_ia32_ldmxcsr(I)v
__builtin_ia32_lfence(?)v
__builtin_ia32_loaddqu(uC*)u16
__builtin_ia32_loadhpd(d2,dC*)d2
__builtin_ia32_loadhps(f4,f2C*)f4
__builtin_ia32_loadlpd(d2,dC*)d2
__builtin_ia32_loadlps(f4,f2C*)f4
__builtin_ia32_loadupd(dC*)d2
__builtin_ia32_loadups(fC*)f4
__builtin_ia32_maskmovdqu(u16,u16,u*)v
__builtin_ia32_maskmovq(u8,u8,u*)v
__builtin_ia32_maxpd(d2,d2)d2
__builtin_ia32_maxps(f4,f4)f4
__builtin_ia32_maxsd(d2,d2)d2
__builtin_ia32_maxss(f4,f4)f4
__builtin_ia32_mfence(?)v
__builtin_ia32_minpd(d2,d2)d2
__builtin_ia32_minps(f4,f4)f4
__builtin_ia32_minsd(d2,d2)d2
__builtin_ia32_minss(f4,f4)f4
__builtin_ia32_movhlps(f4,f4)f4
__builtin_ia32_movlhps(f4,f4)f4
__builtin_ia32_movmskpd(d2)i
__builtin_ia32_movmskps(f4)i
__builtin_ia32_movntdq(o2*,o2)v
__builtin_ia32_movnti(i*,i)v
__builtin_ia32_movnti64(o*,o)v
__builtin_ia32_movntpd(d*,d2)v
__builtin_ia32_movntps(f*,f4)v
__builtin_ia32_movntq(O*,O)v
__builtin_ia32_movq128(o2)o2
__builtin_ia32_movsd(d2,d2)d2
__builtin_ia32_movss(f4,f4)f4
__builtin_ia32_mulpd(d2,d2)d2
__builtin_ia32_mulps(f4,f4)f4
__builtin_ia32_mulsd(d2,d2)d2
__builtin_ia32_mulss(f4,f4)f4
__builtin_ia32_orpd(d2,d2)d2
__builtin_ia32_orps(f4,f4)f4
__builtin_ia32_packssdw(i2,i2)s4
__builtin_ia32_packssdw128(i4,i4)s8
__builtin_ia32_packsswb(s4,s4)u8
__builtin_ia32_packsswb128(s8,s8)u16
__builtin_ia32_packuswb(s4,s4)u8
__builtin_ia32_packuswb128(s8,s8)u16
__builtin_ia32_paddb(u8,u8)u8
__builtin_ia32_paddb128(u16,u16)u16
__builtin_ia32_paddd(i2,i2)i2
__builtin_ia32_paddd128(i4,i4)i4
__builtin_ia32_paddq(o1,o1)o1
__builtin_ia32_paddq128(o2,o2)o2
__builtin_ia32_paddsb(u8,u8)u8
__builtin_ia32_paddsb128(u16,u16)u16
__builtin_ia32_paddsw(s4,s4)s4
__builtin_ia32_paddsw128(s8,s8)s8
__builtin_ia32_paddusb(u8,u8)u8
__builtin_ia32_paddusb128(u16,u16)u16
__builtin_ia32_paddusw(s4,s4)s4
__builtin_ia32_paddusw128(s8,s8)s8
__builtin_ia32_paddw(s4,s4)s4
__builtin_ia32_paddw128(s8,s8)s8
__builtin_ia32_pand(i2,i2)i2
__builtin_ia32_pand128(o2,o2)o2
__builtin_ia32_pandn(i2,i2)i2
__builtin_ia32_pandn128(o2,o2)o2
__builtin_ia32_pause(?)v
__builtin_ia32_pavgb(u8,u8)u8
__builtin_ia32_pavgb128(u16,u16)u16
__builtin_ia32_pavgw(s4,s4)s4
__builtin_ia32_pavgw128(s8,s8)s8
__builtin_ia32_pcmpeqb(u8,u8)u8
__builtin_ia32_pcmpeqb128(u16,u16)u16
__builtin_ia32_pcmpeqd(i2,i2)i2
__builtin_ia32_pcmpeqd128(i4,i4)i4
__builtin_ia32_pcmpeqw(s4,s4)s4
__builtin_ia32_pcmpeqw128(s8,s8)s8
__builtin_ia32_pcmpgtb(u8,u8)u8
__builtin_ia32_pcmpgtb128(u16,u16)u16
__builtin_ia32_pcmpgtd(i2,i2)i2
__builtin_ia32_pcmpgtd128(i4,i4)i4
__builtin_ia32_pcmpgtw(s4,s4)s4
__builtin_ia32_pcmpgtw128(s8,s8)s8
__builtin_ia32_pmaddwd(s4,s4)i2
__builtin_ia32_pmaddwd128(s8,s8)i4
__builtin_ia32_pmaxsw(s4,s4)s4
__builtin_ia32_pmaxsw128(s8,s8)s8
__builtin_ia32_pmaxub(u8,u8)u8
__builtin_ia32_pmaxub128(u16,u16)u16
__builtin_ia32_pminsw(s4,s4)s4
__builtin_ia32_pminsw128(s8,s8)s8
__builtin_ia32_pminub(u8,u8)u8
__builtin_ia32_pminub128(u16,u16)u16
__builtin_ia32_pmovmskb(u8)i
__builtin_ia32_pmovmskb128(u16)i
__builtin_ia32_pmulhuw(s4,s4)s4
__builtin_ia32_pmulhuw128(s8,s8)s8
__builtin_ia32_pmulhw(s4,s4)s4
__builtin_ia32_pmulhw128(s8,s8)s8
__builtin_ia32_pmullw(s4,s4)s4
__builtin_ia32_pmullw128(s8,s8)s8
__builtin_ia32_pmuludq(i2,i2)o1
__builtin_ia32_pmuludq128(i4,i4)o2
__builtin_ia32_por(i2,i2)i2
__builtin_ia32_por128(o2,o2)o2
__builtin_ia32_psadbw(u8,u8)o1
__builtin_ia32_psadbw128(u16,u16)o2
__builtin_ia32_pshufd(i4,i)i4
__builtin_ia32_pshufhw(s8,i)s8
__builtin_ia32_pshuflw(s8,i)s8
__builtin_ia32_pshufw(s4,i)s4
__builtin_ia32_pslld(i2,i2)i2
__builtin_ia32_pslld128(i4,i4)i4
__builtin_ia32_pslldi(i2,i)i2
__builtin_ia32_pslldi128(i4,i)i4
__builtin_ia32_pslldqi128(o2,i)o2
__builtin_ia32_psllq(o1,o1)o1
__builtin_ia32_psllq128(o2,o2)o2
__builtin_ia32_psllqi(o1,i)o1
__builtin_ia32_psllqi128(o2,i)o2
__builtin_ia32_psllw(s4,s4)s4
__builtin_ia32_psllw128(s8,s8)s8
__builtin_ia32_psllwi(s4,i)s4
__builtin_ia32_psllwi128(s8,i)s8
__builtin_ia32_psrad(i2,i2)i2
__builtin_ia32_psrad128(i4,i4)i4
__builtin_ia32_psradi(i2,i)i2
__builtin_ia32_psradi128(i4,i)i4
__builtin_ia32_psraw(s4,s4)s4
__builtin_ia32_psraw128(s8,s8)s8
__builtin_ia32_psrawi(s4,i)s4
__builtin_ia32_psrawi128(s8,i)s8
__builtin_ia32_psrld(i2,i2)i2
__builtin_ia32_psrld128(i4,i4)i4
__builtin_ia32_psrldi(i2,i)i2
__builtin_ia32_psrldi128(i4,i)i4
__builtin_ia32_psrldqi128(o2,i)o2
__builtin_ia32_psrlq(o1,o1)o1
__builtin_ia32_psrlq128(o2,o2)o2
__builtin_ia32_psrlqi(o1,i)o1
__builtin_ia32_psrlqi128(o2,i)o2
__builtin_ia32_psrlw(s4,s4)s4
__builtin_ia32_psrlw128(s8,s8)s8
__builtin_ia32_psrlwi(s4,i)s4
__builtin_ia32_psrlwi128(s8,i)s8
__builtin_ia32_psubb(u8,u8)u8
__builtin_ia32_psubb128(u16,u16)u16
__builtin_ia32_psubd(i2,i2)i2
__builtin_ia32_psubd128(i4,i4)i4
__builtin_ia32_psubq(o1,o1)o1
__builtin_ia32_psubq128(o2,o2)o2
__builtin_ia32_psubsb(u8,u8)u8
__builtin_ia32_psubsb128(u16,u16)u16
__builtin_ia32_psubsw(s4,s4)s4
__builtin_ia32_psubsw128(s8,s8)s8
__builtin_ia32_psubusb(u8,u8)u8
__builtin_ia32_psubusb128(u16,u16)u16
__builtin_ia32_psubusw(s4,s4)s4
__builtin_ia32_psubusw128(s8,s8)s8
__builtin_ia32_psubw(s4,s4)s4
__builtin_ia32_psubw128(s8,s8)s8
__builtin_ia32_punpckhbw(u8,u8)u8
__builtin_ia32_punpckhbw128(u16,u16)u16
__builtin_ia32_punpckhdq(i2,i2)i2
__builtin_ia32_punpckhdq128(i4,i4)i4
__builtin_ia32_punpckhqdq128(o2,o2)o2
__builtin_ia32_punpckhwd(s4,s4)s4
__builtin_ia32_punpckhwd128(s8,s8)s8
__builtin_ia32_punpcklbw(u8,u8)u8
__builtin_ia32_punpcklbw128(u16,u16)u16
__builtin_ia32_punpckldq(i2,i2)i2
__builtin_ia32_punpckldq128(i4,i4)i4
__builtin_ia32_punpcklqdq128(o2,o2)o2
__builtin_ia32_punpcklwd(s4,s4)s4
__builtin_ia32_punpcklwd128(s8,s8)s8
__builtin_ia32_pxor(i2,i2)i2
__builtin_ia32_pxor128(o2,o2)o2
__builtin_ia32_rcpps(f4)f4
__builtin_ia32_rcpss(f4)f4
__builtin_ia32_rdpmc(i)O
__builtin_ia32_rdtsc(?)O
__builtin_ia32_rdtscp(I*)O
__builtin_ia32_readeflags_u32(?)I
__builtin_ia32_readeflags_u64(?)O
__builtin_ia32_rolhi(S,i)S
__builtin_ia32_rolqi(U,i)U
__builtin_ia32_rorhi(S,i)S
__builtin_ia32_rorqi(U,i)U
__builtin_ia32_rsqrtf(f)f
__builtin_ia32_rsqrtps(f4)f4
__builtin_ia32_rsqrtps_nr(f4)f4
__builtin_ia32_rsqrtss(f4)f4
__builtin_ia32_sbb_u32(U,I,I,I*)U
__builtin_ia32_sbb_u64(U,O,O,O*)U
__builtin_ia32_sfence(?)v
__builtin_ia32_shufpd(d2,d2,i)d2
__builtin_ia32_shufps(f4,f4,i)f4
__builtin_ia32_sqrtpd(d2)d2
__builtin_ia32_sqrtps(f4)f4
__builtin_ia32_sqrtps_nr(f4)f4
__builtin_ia32_sqrtsd(d2)d2
__builtin_ia32_sqrtss(f4)f4
__builtin_ia32_stmxcsr(?)I
__builtin_ia32_storedqu(u*,u16)v
__builtin_ia32_storehps(f2*,f4)v
__builtin_ia32_storelps(f2*,f4)v
__builtin_ia32_storeupd(d*,d2)v
__builtin_ia32_storeups(f*,f4)v
__builtin_ia32_subpd(d2,d2)d2
__builtin_ia32_subps(f4,f4)f4
__builtin_ia32_subsd(d2,d2)d2
__builtin_ia32_subss(f4,f4)f4
__builtin_ia32_ucomieq(f4,f4)i
__builtin_ia32_ucomige(f4,f4)i
__builtin_ia32_ucomigt(f4,f4)i
__builtin_ia32_ucomile(f4,f4)i
__builtin_ia32_ucomilt(f4,f4)i
__builtin_ia32_ucomineq(f4,f4)i
__builtin_ia32_ucomisdeq(d2,d2)i
__builtin_ia32_ucomisdge(d2,d2)i
__builtin_ia32_ucomisdgt(d2,d2)i
__builtin_ia32_ucomisdle(d2,d2)i
__builtin_ia32_ucomisdlt(d2,d2)i
__builtin_ia32_ucomisdneq(d2,d2)i
__builtin_ia32_unpckhpd(d2,d2)d2
__builtin_ia32_unpckhps(f4,f4)f4
__builtin_ia32_unpcklpd(d2,d2)d2
__builtin_ia32_unpcklps(f4,f4)f4
__builtin_ia32_vec_ext_v16qi(u16,i)u
__builtin_ia32_vec_ext_v2df(d2,i)d
__builtin_ia32_vec_ext_v2di(o2,i)o
__builtin_ia32_vec_ext_v2si(i2,i)i
__builtin_ia32_vec_ext_v4hi(s4,i)s
__builtin_ia32_vec_ext_v4sf(f4,i)f
__builtin_ia32_vec_ext_v4si(i4,i)i
__builtin_ia32_vec_ext_v8hi(s8,i)s
__builtin_ia32_vec_init_v2si(i,i)i2
__builtin_ia32_vec_init_v4hi(s,s,s,s)s4
__builtin_ia32_vec_init_v8qi(u,u,u,u,u,u,u,u)u8
__builtin_ia32_vec_pack_sfix(d2,d2)i4
__builtin_ia32_vec_set_v4hi(s4,s,i)s4
__builtin_ia32_vec_set_v8hi(s8,s,i)s8
__builtin_ia32_writeeflags_u32(I)v
__builtin_ia32_writeeflags_u64(O)v
__builtin_ia32_xorpd(d2,d2)d2
__builtin_ia32_xorps(f4,f4)f4
__builtin_iceil(d)i
__builtin_iceilf(f)i
__builtin_iceill(e)i
__builtin_ifloor(d)i
__builtin_ifloorf(f)i
__builtin_ifloorl(e)i
__builtin_ilogb(d)i
__builtin_ilogbf(f)i
__builtin_ilogbl(e)i
__builtin_imaxabs(l)l
__builtin_index(uC*,i)u*
__builtin_inf(?)d
__builtin_infd128(?)f:D128
__builtin_infd32(?)f:D32
__builtin_infd64(?)f:D64
__builtin_inff(?)f
__builtin_infl(?)e
__builtin_infq(?)q
__builtin_init_dwarf_reg_size_table(v*)v
__builtin_init_heap_trampoline(v*,v*,v*)v
__builtin_init_trampoline(v*,v*,v*)v
__builtin_irint(d)i
__builtin_irintf(f)i
__builtin_irintl(e)i
__builtin_iround(d)i
__builtin_iroundf(f)i
__builtin_iroundl(e)i
__builtin_isalnum(i)i
__builtin_isalpha(i)i
__builtin_isascii(i)i
__builtin_isblank(i)i
__builtin_iscntrl(i)i
__builtin_isdigit(i)i
__builtin_isfinite(?)i
__builtin_isgraph(i)i
__builtin_isgreater(?)i
__builtin_isgreaterequal(?)i
__builtin_isinf(?)i
__builtin_isinf_sign(?)i
__builtin_isinfd128(f:D128)i
__builtin_isinfd32(f:D32)i
__builtin_isinfd64(f:D64)i
__builtin_isinff(f)i
__builtin_isinfl(e)i
__builtin_isless(?)i
__builtin_islessequal(?)i
__builtin_islessgreater(?)i
__builtin_islower(i)i
__builtin_isnan(?)i
__builtin_isnand128(f:D128)i
__builtin_isnand32(f:D32)i
__builtin_isnand64(f:D64)i
__builtin_isnanf(f)i
__builtin_isnanl(e)i
__builtin_isnormal(?)i
__builtin_isprint(i)i
__builtin_ispunct(i)i
__builtin_isspace(i)i
__builtin_isunordered(?)i
__builtin_isupper(i)i
__builtin_iswalnum(I)i
__builtin_iswalpha(I)i
__builtin_iswblank(I)i
__builtin_iswcntrl(I)i
__builtin_iswdigit(I)i
__builtin_iswgraph(I)i
__builtin_iswlower(I)i
__builtin_iswprint(I)i
__builtin_iswpunct(I)i
__builtin_iswspace(I)i
__builtin_iswupper(I)i
__builtin_iswxdigit(I)i
__builtin_isxdigit(i)i
__builtin_j0(d)d
__builtin_j0f(f)f
__builtin_j0l(e)e
__builtin_j1(d)d
__builtin_j1f(f)f
__builtin_j1l(e)e
__builtin_jn(i,d)d
__builtin_jnf(i,f)f
__builtin_jnl(i,e)e
__builtin_labs(l)l
__builtin_lceil(d)l
__builtin_lceilf(f)l
__builtin_lceill(e)l
__builtin_ldexp(d,i)d
__builtin_ldexpf(f,i)f
__builtin_ldexpl(e,i)e
__builtin_lfloor(d)l
__builtin_lfloorf(f)l
__builtin_lfloorl(e)l
__builtin_lgamma(d)d
__builtin_lgamma_r(d,i*)d
__builtin_lgammaf(f)f
__builtin_lgammaf_r(f,i*)f
__builtin_lgammal(e)e
__builtin_lgammal_r(e,i*)e
__builtin_llabs(o)o
__builtin_llceil(d)o
__builtin_llceilf(f)o
__builtin_llceill(e)o
__builtin_llfloor(d)o
__builtin_llfloorf(f)o
__builtin_llfloorl(e)o
__builtin_llrint(d)o
__builtin_llrintf(f)o
__builtin_llrintl(e)o
__builtin_llround(d)o
__builtin_llroundf(f)o
__builtin_llroundl(e)o
__builtin_log(d)d
__builtin_log10(d)d
__builtin_log10f(f)f
__builtin_log10l(e)e
__builtin_log1p(d)d
__builtin_log1pf(f)f
__builtin_log1pl(e)e
__builtin_log2(d)d
__builtin_log2f(f)f
__builtin_log2l(e)e
__builtin_logb(d)d
__builtin_logbf(f)f
__builtin_logbl(e)e
__builtin_logf(f)f
__builtin_logl(e)e
__builtin_longjmp(v*,i)vX
__builtin_lrint(d)l
__builtin_lrintf(f)l
__builtin_lrintl(e)l
__builtin_lround(d)l
__builtin_lroundf(f)l
__builtin_lroundl(e)l
__builtin_malloc(L)v*
__builtin_memchr(vC*,i,L)v*
__builtin_memcmp(vC*,vC*,L)i
__builtin_memcpy(v*,vC*,L)v*
__builtin_memmove(v*,vC*,L)v*
__builtin_mempcpy(v*,vC*,L)v*
__builtin_memset(v*,i,L)v*
__builtin_modf(d,d*)d
__builtin_modff(f,f*)f
__builtin_modfl(e,e*)e
__builtin_ms_va_copy(a*,a*)v
__builtin_ms_va_end(a*)v
__builtin_ms_va_start(a*,?)v
__builtin_mul_overflow(?)b
__builtin_nan(uC*)d
__builtin_nand128(uC*)f:D128
__builtin_nand32(uC*)f:D32
__builtin_nand64(uC*)f:D64
__builtin_nanf(uC*)f
__builtin_nanl(uC*)e
__builtin_nans(uC*)d
__builtin_nansf(uC*)f
__builtin_nansl(uC*)e
__builtin_nearbyint(d)d
__builtin_nearbyintf(f)f
__builtin_nearbyintl(e)e
__builtin_next_arg(?)v*
__builtin_nextafter(d,d)d
__builtin_nextafterf(f,f)f
__builtin_nextafterl(e,e)e
__builtin_nexttoward(d,e)d
__builtin_nexttowardf(f,e)f
__builtin_nexttowardl(e,e)e
__builtin_nonlocal_goto(v*,v*)vX
__builtin_object_size(vC*,i)L
__builtin_omp_get_num_teams(?)i
__builtin_omp_get_num_threads(?)i
__builtin_omp_get_team_num(?)i
__builtin_omp_get_thread_num(?)i
__builtin_parity(I)i
__builtin_parityimax(L)i
__builtin_parityl(L)i
__builtin_parityll(O)i
__builtin_popcount(I)i
__builtin_popcountimax(L)i
__builtin_popcountl(L)i
__builtin_popcountll(O)i
__builtin_posix_memalign(v**,L,L)i
__builtin_pow(d,d)d
__builtin_pow10(d)d
__builtin_pow10f(f)f
__builtin_pow10l(e)e
__builtin_powf(f,f)f
__builtin_powi(d,i)d
__builtin_powif(f,i)f
__builtin_powil(e,i)e
__builtin_powl(e,e)e
__builtin_prefetch(vC*,?)v
__builtin_printf(uC*,?)i
__builtin_printf_unlocked(uC*,?)i
__builtin_putc(i,v*)i
__builtin_putc_unlocked(i,v*)i
__builtin_putchar(i)i
__builtin_putchar_unlocked(i)i
__builtin_puts(uC*)i
__builtin_puts_unlocked(uC*)i
__builtin_realloc(v*,L)v*
__builtin_remainder(d,d)d
__builtin_remainderf(f,f)f
__builtin_remainderl(e,e)e
__builtin_remquo(d,d,i*)d
__builtin_remquof(f,f,i*)f
__builtin_remquol(e,e,i*)e
__builtin_return(v*)vX
__builtin_return_address(I)v*
__builtin_rindex(uC*,i)u*
__builtin_rint(d)d
__builtin_rintf(f)f
__builtin_rintl(e)e
__builtin_round(d)d
__builtin_roundf(f)f
__builtin_roundl(e)e
__builtin_sadd_overflow(i,i,i*)b
__builtin_saddl_overflow(l,l,l*)b
__builtin_saddll_overflow(o,o,o*)b
__builtin_saveregs(?)v*
__builtin_scalb(d,d)d
__builtin_scalbf(f,f)f
__builtin_scalbl(e,e)e
__builtin_scalbln(d,l)d
__builtin_scalblnf(f,l)f
__builtin_scalblnl(e,l)e
__builtin_scalbn(d,i)d
__builtin_scalbnf(f,i)f
__builtin_scalbnl(e,i)e
__builtin_scanf(uC*,?)i
__builtin_set_thread_pointer(v*)v
__builtin_setjmp(v*)i
__builtin_setjmp_receiver(v*)v
__builtin_setjmp_setup(v*,v*)v
__builtin_signbit(d)i
__builtin_signbitd128(f:D128)i
__builtin_signbitd32(f:D32)i
__builtin_signbitd64(f:D64)i
__builtin_signbitf(f)i
__builtin_signbitl(e)i
__builtin_significand(d)d
__builtin_significandf(f)f
__builtin_significandl(e)e
__builtin_sin(d)d
__builtin_sincos(d,d*,d*)v
__builtin_sincosf(f,f*,f*)v
__builtin_sincosl(e,e*,e*)v
__builtin_sinf(f)f
__builtin_sinh(d)d
__builtin_sinhf(f)f
__builtin_sinhl(e)e
__builtin_sinl(e)e
__builtin_smul_overflow(i,i,i*)b
__builtin_smull_overflow(l,l,l*)b
__builtin_smulll_overflow(o,o,o*)b
__builtin_snprintf(u*,L,uC*,?)i
__builtin_sprintf(u*,uC*,?)i
__builtin_sqrt(d)d
__builtin_sqrtf(f)f
__builtin_sqrtl(e)e
__builtin_sscanf(uC*,uC*,?)i
__builtin_ssub_overflow(i,i,i*)b
__builtin_ssubl_overflow(l,l,l*)b
__builtin_ssubll_overflow(o,o,o*)b
__builtin_stack_restore(v*)v
__builtin_stack_save(?)v*
__builtin_stpcpy(u*,uC*)u*
__builtin_stpncpy(u*,uC*,L)u*
__builtin_strcasecmp(uC*,uC*)i
__builtin_strcat(u*,uC*)u*
__builtin_strchr(uC*,i)u*
__builtin_strcmp(uC*,uC*)i
__builtin_strcpy(u*,uC*)u*
__builtin_strcspn(uC*,uC*)L
__builtin_strdup(uC*)u*
__builtin_strfmon(u*,L,uC*,?)l
__builtin_strftime(u*,L,uC*,vC*)L
__builtin_strlen(uC*)L
__builtin_strncasecmp(uC*,uC*,L)i
__builtin_strncat(u*,uC*,L)u*
__builtin_strncmp(uC*,uC*,L)i
__builtin_strncpy(u*,uC*,L)u*
__builtin_strndup(uC*,L)u*
__builtin_strpbrk(uC*,uC*)u*
__builtin_strrchr(uC*,i)u*
__builtin_strspn(uC*,uC*)L
__builtin_strstr(uC*,uC*)u*
__builtin_sub_overflow(?)b
__builtin_sysv_va_copy(?)!
__builtin_sysv_va_end(?)!
__builtin_sysv_va_start(?)!
__builtin_tan(d)d
__builtin_tanf(f)f
__builtin_tanh(d)d
__builtin_tanhf(f)f
__builtin_tanhl(e)e
__builtin_tanl(e)e
__builtin_tgamma(d)d
__builtin_tgammaf(f)f
__builtin_tgammal(e)e
__builtin_thread_pointer(?)v*
__builtin_toascii(i)i
__builtin_tolower(i)i
__builtin_toupper(i)i
__builtin_towlower(I)I
__builtin_towupper(I)I
__builtin_trap(?)vX
__builtin_trunc(d)d
__builtin_truncf(f)f
__builtin_truncl(e)e
__builtin_uadd_overflow(I,I,I*)b
__builtin_uaddl_overflow(L,L,L*)b
__builtin_uaddll_overflow(O,O,O*)b
__builtin_umul_overflow(I,I,I*)b
__builtin_umull_overflow(L,L,L*)b
__builtin_umulll_overflow(O,O,O*)b
__builtin_unreachable(?)vX
__builtin_unwind_init(?)v
__builtin_unwind_resume(v*)vX
__builtin_update_setjmp_buf(v*,i)v
__builtin_usub_overflow(I,I,I*)b
__builtin_usubl_overflow(L,L,L*)b
__builtin_usubll_overflow(O,O,O*)b
__builtin_va_arg()v
__builtin_va_arg_pack(?)i
__builtin_va_arg_pack_len(?)i
__builtin_va_copy(a*,a*)v
__builtin_va_end(a*)v
__builtin_va_start(a*,?)v
__builtin_vfprintf(v*,uC*,a*)i
__builtin_vfscanf(v*,uC*,a*)i
__builtin_vprintf(uC*,a*)i
__builtin_vscanf(uC*,a*)i
__builtin_vsnprintf(u*,L,uC*,a*)i
__builtin_vsprintf(u*,uC*,a*)i
__builtin_vsscanf(uC*,uC*,a*)i
__builtin_y0(d)d
__builtin_y0f(f)f
__builtin_y0l(e)e
__builtin_y1(d)d
__builtin_y1f(f)f
__builtin_y1l(e)e
__builtin_yn(i,d)d
__builtin_ynf(i,f)f
__builtin_ynl(i,e)e
__clear_cache(v*,v*)v
__copysigntf3(q,q)q
__cyg_profile_func_enter(v*,v*)v
__cyg_profile_func_exit(v*,v*)v
__divdc3(d,d,d,d)D
__divsc3(f,f,f,f)F
__divtc3(q,q,q,q)Q
__divxc3(e,e,e,e)E
__fabstf2(q)q
__fprintf_chk(v*,i,uC*,?)i
__gcov_flush()v
__memcpy_chk(v*,vC*,L,L)v*
__memmove_chk(v*,vC*,L,L)v*
__mempcpy_chk(v*,vC*,L,L)v*
__memset_chk(v*,i,L,L)v*
__muldc3(d,d,d,d)D
__mulsc3(f,f,f,f)F
__multc3(q,q,q,q)Q
__mulxc3(e,e,e,e)E
__printf_chk(i,uC*,?)i
__snprintf_chk(u*,L,i,L,uC*,?)i
__sprintf_chk(u*,i,L,uC*,?)i
__stpcpy_chk(u*,uC*,L)u*
__stpncpy_chk(u*,uC*,L,L)u*
__strcat_chk(u*,uC*,L)u*
__strcpy_chk(u*,uC*,L)u*
__strncat_chk(u*,uC*,L,L)u*
__strncpy_chk(u*,uC*,L,L)u*
__sync_add_and_fetch(?)v
__sync_add_and_fetch_1(vV*,U)U
__sync_add_and_fetch_16(vV*,T)T
__sync_add_and_fetch_2(vV*,S)S
__sync_add_and_fetch_4(vV*,I)I
__sync_add_and_fetch_8(vV*,L)L
__sync_and_and_fetch(?)v
__sync_and_and_fetch_1(vV*,U)U
__sync_and_and_fetch_16(vV*,T)T
__sync_and_and_fetch_2(vV*,S)S
__sync_and_and_fetch_4(vV*,I)I
__sync_and_and_fetch_8(vV*,L)L
__sync_bool_compare_and_swap(?)v
__sync_bool_compare_and_swap_1(vV*,U,U)b
__sync_bool_compare_and_swap_16(vV*,T,T)b
__sync_bool_compare_and_swap_2(vV*,S,S)b
__sync_bool_compare_and_swap_4(vV*,I,I)b
__sync_bool_compare_and_swap_8(vV*,L,L)b
__sync_fetch_and_add(?)v
__sync_fetch_and_add_1(vV*,U)U
__sync_fetch_and_add_16(vV*,T)T
__sync_fetch_and_add_2(vV*,S)S
__sync_fetch_and_add_4(vV*,I)I
__sync_fetch_and_add_8(vV*,L)L
__sync_fetch_and_and(?)v
__sync_fetch_and_and_1(vV*,U)U
__sync_fetch_and_and_16(vV*,T)T
__sync_fetch_and_and_2(vV*,S)S
__sync_fetch_and_and_4(vV*,I)I
__sync_fetch_and_and_8(vV*,L)L
__sync_fetch_and_nand(?)v
__sync_fetch_and_nand_1(vV*,U)U
__sync_fetch_and_nand_16(vV*,T)T
__sync_fetch_and_nand_2(vV*,S)S
__sync_fetch_and_nand_4(vV*,I)I
__sync_fetch_and_nand_8(vV*,L)L
__sync_fetch_and_or(?)v
__sync_fetch_and_or_1(vV*,U)U
__sync_fetch_and_or_16(vV*,T)T
__sync_fetch_and_or_2(vV*,S)S
__sync_fetch_and_or_4(vV*,I)I
__sync_fetch_and_or_8(vV*,L)L
__sync_fetch_and_sub(?)v
__sync_fetch_and_sub_1(vV*,U)U
__sync_fetch_and_sub_16(vV*,T)T
__sync_fetch_and_sub_2(vV*,S)S
__sync_fetch_and_sub_4(vV*,I)I
__sync_fetch_and_sub_8(vV*,L)L
__sync_fetch_and_xor(?)v
__sync_fetch_and_xor_1(vV*,U)U
__sync_fetch_and_xor_16(vV*,T)T
__sync_fetch_and_xor_2(vV*,S)S
__sync_fetch_and_xor_4(vV*,I)I
__sync_fetch_and_xor_8(vV*,L)L
__sync_lock_release(?)v
__sync_lock_release_1(vV*)v
__sync_lock_release_16(vV*)v
__sync_lock_release_2(vV*)v
__sync_lock_release_4(vV*)v
__sync_lock_release_8(vV*)v
__sync_lock_test_and_set(?)v
__sync_lock_test_and_set_1(vV*,U)U
__sync_lock_test_and_set_16(vV*,T)T
__sync_lock_test_and_set_2(vV*,S)S
__sync_lock_test_and_set_4(vV*,I)I
__sync_lock_test_and_set_8(vV*,L)L
__sync_nand_and_fetch(?)v
__sync_nand_and_fetch_1(vV*,U)U
__sync_nand_and_fetch_16(vV*,T)T
__sync_nand_and_fetch_2(vV*,S)S
__sync_nand_and_fetch_4(vV*,I)I
__sync_nand_and_fetch_8(vV*,L)L
__sync_or_and_fetch(?)v
__sync_or_and_fetch_1(vV*,U)U
__sync_or_and_fetch_16(vV*,T)T
__sync_or_and_fetch_2(vV*,S)S
__sync_or_and_fetch_4(vV*,I)I
__sync_or_and_fetch_8(vV*,L)L
__sync_sub_and_fetch(?)v
__sync_sub_and_fetch_1(vV*,U)U
__sync_sub_and_fetch_16(vV*,T)T
__sync_sub_and_fetch_2(vV*,S)S
__sync_sub_and_fetch_4(vV*,I)I
__sync_sub_and_fetch_8(vV*,L)L
__sync_synchronize(?)v
__sync_val_compare_and_swap(?)v
__sync_val_compare_and_swap_1(vV*,U,U)U
__sync_val_compare_and_swap_16(vV*,T,T)T
__sync_val_compare_and_swap_2(vV*,S,S)S
__sync_val_compare_and_swap_4(vV*,I,I)I
__sync_val_compare_and_swap_8(vV*,L,L)L
__sync_xor_and_fetch(?)v
__sync_xor_and_fetch_1(vV*,U)U
__sync_xor_and_fetch_16(vV*,T)T
__sync_xor_and_fetch_2(vV*,S)S
__sync_xor_and_fetch_4(vV*,I)I
__sync_xor_and_fetch_8(vV*,L)L
__vfprintf_chk(v*,i,uC*,a*)i
__vprintf_chk(i,uC*,a*)i
__vsnprintf_chk(u*,L,i,L,uC*,a*)i
__vsprintf_chk(u*,i,L,uC*,a*)i
